import Head from "next/head";
import React, { useState, useEffect } from "react";
import Image from "next/image";
import { useRouter } from "next/router";
import Map, { Marker, Popup } from "react-map-gl";
import { sanityClient, urlFor } from "../sanity";
import { getCenter } from "geolib";
import "mapbox-gl/dist/mapbox-gl.css";

export default function Home({ posts }) {
  console.log("posts", posts);
  const router = useRouter();
  const coordinates = posts.map((result) => ({
    longitude: result?.location?.longitude,
    latitude: result?.location?.latitude,
  }));
  const [selectedLocation, setSelectedLocation] = useState({});
  const center = getCenter(coordinates);
  const [viewport, setViewport] = useState({
    longitude: "101.3796692033846",
    latitude: "4.480032245184534",
    zoom: 3.5,
    width: "100%",
    height: "100%",
  });

  return (
    <div>
      <Head>
        <title>Zong Hong PhotoTravel Map</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="max-w-screen mx-auto">
        <div className="flex items-center justify-center">
          <Map
            {...viewport}
            onMove={(evt) => setViewport(evt.viewport)}
            style={{ width: "100vw", height: "100vh" }}
            mapStyle="mapbox://styles/zonghong/cks1a85to4kqf18p6zuj5zdx6"
            mapboxAccessToken={process.env.NEXT_PUBLIC_MAPBOX_KEY}
          >
            {posts.map((post) => (
              <div key={post._id}>
                <Marker
                  longitude={Number(post.location.longitude)}
                  latitude={Number(post.location.latitude)}
                  color="red"
                  onClick={() => setSelectedLocation(post)}
                >
                  <div
                    onClick={() => setSelectedLocation(post.location.longitude)}
                    className="w-12 text-center  text-white  cursor-pointer"
                  >
                    <Image
                      layout="fixed"
                      width={60}
                      height={60}
                      src={urlFor(post.mainImage).url()}
                      alt="img"
                      objectFit="contain"
                      className=""
                    />
                  </div>
                </Marker>
                {selectedLocation === post.location.longitude ? (
                  <div>
                    <Popup
                      closeOnClick={false}
                      onClose={() => setSelectedLocation({})}
                      latitude={post.location.latitude}
                      longitude={post.location.longitude}
                    >
                      <div
                        onClick={() =>
                          router.push(`/post/${post.slug.current}`)
                        }
                        className="cursor-pointer"
                      >
                        <p className="font-bold hover:underline">
                          {post.title}
                        </p>
                      </div>
                    </Popup>
                  </div>
                ) : (
                  false
                )}
              </div>
            ))}
          </Map>
        </div>
      </main>
    </div>
  );
}

export const getServerSideProps = async (context) => {
  const query = `*[_type == "post"]{
    _id,
    title,
    author->{
      _id,
      ...,
    },
    slug,
    publishedAt,
    categories[0]->{
      _id,
      ...,
    },
    mainImage,
    location->{
      _id,
      ...,
    },
  }| order(_createdAt desc)`;
  const posts = await sanityClient.fetch(query);
  return {
    props: {
      posts,
    },
  };
};
